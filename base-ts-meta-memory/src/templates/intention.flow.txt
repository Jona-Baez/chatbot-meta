import { createFlowrouting } from "@builderbot-plugins/langchain";
import { EVENTS } from "@builderbot/bot";
import { config } from "../config";
import path from "path"
import fs from "fs";
import { menuFlow} from "./menuFlow";
import { faqFlow } from "./faqFlow";

const Prompt_DETECTED =  path.join(
    process.cwd(),
    "assets/prompts",
    "prompt_Detection.txt"
);

const Prompt_Detected = fs.readFileSync(Prompt_DETECTED, "utf8");

export const DetectIntention = createFlowrouting
    .setKeyword(EVENTS.ACTION)
    .setIntentions({
        intentions: ["MENU_OPCIONES", "FAQ", "NO_DETECTED"],
        description: Prompt_Detected,
    })
    .setAIModel({
        modelNAME: "openai" as any,
        args: {
            modelName: config.Model,
            apikey: config.ApiKey,
        },
    })
    .create({
        afterEnd(flow) {
            return flow.addAction(async (ctx, { state, endFlow, gotoFlow}) => {
                try {
                    console.log("INTENCION DEFECT", await state.get("intention"));

                    if ((await state.get("intention")) === "NO_DETECTED") {
                        return endFlow(
                            "Tu mensaje esta fuera de contexto"
                        );
                    }

                    if ((await state.get("intention")) === "MENU_OPCIONES") {
                        return gotoFlow(menuFlow);
                   }
                   
                   if ((await state.get("intention")) === "FAQ") {
                    return gotoFlow(faqFlow);
                    }
                }   catch (error) {
                    console.error ("Error en DetectionIntention: ", error);
                }
            });
        },
    });